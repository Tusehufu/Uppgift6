'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _kendoBaseComponentsVueWrapper = require('@progress/kendo-base-components-vue-wrapper');

var _RangeSliderProps = require('./RangeSliderProps');

var _RangeSliderProps2 = _interopRequireDefault(_RangeSliderProps);

var _Tooltip = require('../Common/Tooltip');

var _Tooltip2 = _interopRequireDefault(_Tooltip);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    emits: {
        'update:modelValue': null,
        'kendowidgetready': null
    },
    props: _RangeSliderProps2.default,
    mixins: [_kendoBaseComponentsVueWrapper.KendoBaseComponent, _kendoBaseComponentsVueWrapper.KendoBaseInputComponent, _Tooltip2.default],
    mounted() {
        var that = this;
        kendo.jQuery(that.$el).kendoRangeSlider(that.widgetOptions);

        if (this.v3) {
            this.ready();
            this.$emit('kendowidgetready', this.kendoWidget());
        } else {
            this.$emit('kendowidgetready', this.kendoWidget());
        }

        that.kendoWidget().bind('change', function () {
            if (that.v3) {
                that.$emit('update:modelValue', that.kendoWidget().value());
            } else {
                that.$emit('changemodel', that.kendoWidget().value());
            }
        });

        that.kendoWidget().bind('slide', function () {
            if (that.v3) {
                if (that.getListeners()['onUpdate:modelValue']) {
                    that.$emit('update:modelValue', that.kendoWidget().value());
                }
            } else {
                that.$emit('changemodel', that.kendoWidget().value());
            }
        });
    },
    methods: {
        kendoWidget() {
            return kendo.jQuery(this.$el).getKendoRangeSlider();
        }
    },
    computed: {
        nameAttr() {
            return this.$attrs.name;
        },
        selectionStartName() {
            var nameAttr = this.nameAttr;
            return nameAttr ? nameAttr + '[0]' : null;
        },
        selectionEndName() {
            var nameAttr = this.nameAttr;
            return nameAttr ? nameAttr + '[1]' : null;
        }
    }
};